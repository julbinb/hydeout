- key: "NEUPRL 2017"
  title: "Comparative Study of Generic Programming Features in Object-Oriented Languages"
  venue: "<a target='_blank' href='http://prl.ccs.neu.edu/seminars.html'>Programming Language Seminar</a>, <a target='_blank' href='http://www.ccis.northeastern.edu/'>College</a> of Computer and Information Science, <a target='_blank' href='http://www.northeastern.edu/'>Northeastern University</a>. Boston, MA, USA"
  date: "Feb 3, 2017"
  links:
    - name: slides PDF
      link: /files/slides/belyakova-NEUPLsem2017-slides.pdf
  abstract: "Earlier comparative studies of language support for generic programming (GP) have shown that mainstream object-oriented (OO) languages such as C# and Java provide weaker support for GP as compared with functional languages such as Haskell or SML.<br/> One reason is that generic mechanisms of C# and Java are based on F-bounded polymorphism, which has certain deficiencies. Some of these deficiencies are eliminated in more recent languages, such as Scala and Kotlin. However, there are peculiarities of object-oriented languages as a whole, which prevent them from being as expressible as Haskell in terms of generic programming.<br/>In this talk we will cover the main problems of language support for generic programming in C#/Java as well as other modern object-oriented languages, including Scala and Swift. It turns out that all of these languages follow the same approach to constraining type parameters, which leads to inevitable shortcomings. To overcome them, an alternative approach is suggested in several extensions for OO languages, in particular, JavaGenus. The advantages and drawbacks of both approaches will be discussed in the talk."
